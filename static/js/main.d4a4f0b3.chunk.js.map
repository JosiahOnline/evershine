{"version":3,"sources":["components/Home.js","components/Products.js","components/Contact.js","components/NoMatch.js","components/Services.js","components/NavigationBar.js","App.js","serviceWorker.js","index.js"],"names":["Home","Carousel","Item","className","src","alt","Caption","Button","variant","Products","Contact","NoMatch","Services","NavigationBar","Navbar","fixed","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","App","Fragment","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oPAgDeA,EA7CF,WACT,OACI,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAASC,KAAV,KACI,yBACIC,UAAU,gBACVC,IAAI,wGACJC,IAAI,gBACR,kBAACJ,EAAA,EAASK,QAAV,KACI,4CACA,0JAEA,kBAACC,EAAA,EAAD,CAAQC,QAAQ,WAAhB,YAGR,kBAACP,EAAA,EAASC,KAAV,KACI,yBACIC,UAAU,gBACVC,IAAI,6GACJC,IAAI,gBAER,kBAACJ,EAAA,EAASK,QAAV,KACI,4CACA,0JAEA,kBAACC,EAAA,EAAD,CAAQC,QAAQ,WAAhB,YAGR,kBAACP,EAAA,EAASC,KAAV,KACI,yBACIC,UAAU,gBACVC,IAAI,8FACJC,IAAI,gBAER,kBAACJ,EAAA,EAASK,QAAV,KACI,2CACA,0JAEA,kBAACC,EAAA,EAAD,CAAQC,QAAQ,WAAhB,cC/BLC,EARE,WACf,OACE,6BACE,yCCKSC,EARC,WACd,OACE,6BACE,wCCKSC,EARC,WACd,OACE,6BACE,yCCKSC,EARE,WACf,OACE,6BACE,sC,gBCeSC,EAjBO,WACpB,OACI,kBAACC,EAAA,EAAD,CAAQC,MAAM,MAAMZ,UAAU,WAAWa,OAAO,MAC9C,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,KAAnB,qBACA,kBAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKpB,UAAU,WACb,kBAACoB,EAAA,EAAIC,KAAL,CAAUN,KAAK,KAAf,QACA,kBAACK,EAAA,EAAIC,KAAL,CAAUN,KAAK,aAAf,YACA,kBAACK,EAAA,EAAIC,KAAL,CAAUN,KAAK,YAAf,YACA,kBAACK,EAAA,EAAIC,KAAL,CAAUN,KAAK,WAAf,eCaGO,MAjBf,WACE,OACE,kBAAC,IAAMC,SAAP,KACA,kBAAC,EAAD,MACI,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW7B,IACjC,kBAAC,IAAD,CAAO4B,KAAK,YAAYC,UAAWpB,IACnC,kBAAC,IAAD,CAAOmB,KAAK,YAAYC,UAAWjB,IACnC,kBAAC,IAAD,CAAOgB,KAAK,WAAWC,UAAWnB,IAClC,kBAAC,IAAD,CAAOmB,UAAWlB,QCPVmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d4a4f0b3.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Carousel, Button} from 'react-bootstrap';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <Carousel>\r\n            <Carousel.Item>\r\n                <img\r\n                    className=\"d-block w-100\"\r\n                    src=\"https://res.cloudinary.com/trippleninja/image/upload/v1585388615/News%20Images/C_YNoGathering-ENG.jpg\"\r\n                    alt=\"First slide\"/>\r\n                <Carousel.Caption>\r\n                    <h3>Our Products</h3>\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\r\n                        tempor incididunt ut labore et dolore magna aliqua.</p>\r\n                    <Button variant=\"primary\">Browse</Button>\r\n                </Carousel.Caption>\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n                <img\r\n                    className=\"d-block w-100\"\r\n                    src=\"https://res.cloudinary.com/trippleninja/image/upload/v1585388928/News%20Images/ServicesNoGathering-ENG.jpg\"\r\n                    alt=\"Third slide\"/>\r\n\r\n                <Carousel.Caption>\r\n                    <h3>Our Services</h3>\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\r\n                        tempor incididunt ut labore et dolore magna aliqua.</p>\r\n                    <Button variant=\"primary\">Browse</Button>\r\n                </Carousel.Caption>\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n                <img\r\n                    className=\"d-block w-100\"\r\n                    src=\"https://res.cloudinary.com/trippleninja/image/upload/v1582368219/News%20Images/Elle-ENG.jpg\"\r\n                    alt=\"Third slide\"/>\r\n\r\n                <Carousel.Caption>\r\n                    <h3>Our Clients</h3>\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\r\n                        tempor incididunt ut labore et dolore magna aliqua.</p>\r\n                    <Button variant=\"primary\">Browse</Button>\r\n                </Carousel.Caption>\r\n            </Carousel.Item>\r\n        </Carousel>\r\n    );\r\n}\r\n\r\nexport default Home","import React from 'react';\r\n\r\nconst Products = () => {\r\n  return ( \r\n    <div>\r\n      <p>Products</p>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Products;","import React from 'react';\r\n\r\nconst Contact = () => {\r\n  return ( \r\n    <div>\r\n      <p>Contact</p>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Contact;","import React from 'react';\r\n\r\nconst NoMatch = () => {\r\n  return ( \r\n    <div>\r\n      <p>No Match</p>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default NoMatch","import React from 'react';\r\n\r\nconst Services = () => {\r\n  return ( \r\n    <div>\r\n      <p>About</p>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Services;","import React from 'react';\r\nimport { Nav, Navbar} from 'react-bootstrap';\r\n\r\nconst NavigationBar = () => {\r\n  return (\r\n      <Navbar fixed=\"top\" className=\"colorNav\" expand=\"lg\">\r\n        <Navbar.Brand href=\"/\">SUPREME EVERSHINE</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/\">Home</Nav.Link>\r\n            <Nav.Link href=\"/products\">Products</Nav.Link>\r\n            <Nav.Link href=\"services\">Services</Nav.Link>\r\n            <Nav.Link href=\"contact\">Contact</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n  );\r\n}\r\n \r\nexport default NavigationBar;","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport Products from './components/Products';\nimport Contact from './components/Contact';\nimport NoMatch from './components/NoMatch';\nimport Services from './components/Services';\nimport NavigationBar from './components/NavigationBar'\n\nfunction App() {\n  return (\n    <React.Fragment>\n    <NavigationBar />\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/products\" component={Products} />\n            <Route path=\"/services\" component={Services} />\n            <Route path=\"/contact\" component={Contact} />\n            <Route component={NoMatch}/>\n          </Switch>\n        </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}